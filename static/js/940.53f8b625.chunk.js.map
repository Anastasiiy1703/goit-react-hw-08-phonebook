{"version":3,"file":"static/js/940.53f8b625.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst greenTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#4caf50', \n    },\n  },\n});\n\nconst ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    const isExist = contacts.some(contact => contact.name === name);\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    e.target.reset();\n  };\n\n  return (\n    <ThemeProvider theme={greenTheme}>\n      <Box\n        sx={{\n          marginTop: 4,\n          marginBottom: 4,\n        }}\n      >\n        <Box\n          component=\"form\"\n          onSubmit={handleFormSubmit}\n          noValidate\n          sx={{\n            mt: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)',\n            borderRadius: '8px',\n            padding: '20px',\n          }}\n        >\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            autoFocus\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"number\"\n            type=\"tel\"\n            label=\"Number\"\n            name=\"number\"\n            autoComplete=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            sx={{ mb: 2 }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Add Contact\n          </Button>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default ContactsForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport CloseIcon from '@mui/icons-material/Close'; \nimport { Typography } from '@mui/material';\n\nconst ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <Box>\n      <List>\n        {contacts &&\n          contacts.map(contact => (\n            <ListItem key={contact.id}>\n              <Grid\n                container\n                spacing={1}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)', \n                  backgroundColor: 'white', \n                  borderRadius: '8px', \n                  padding: 3,\n                }}\n              >\n                <Grid item sx={{ display: 'flex', gap: 1 }}>\n                  <Grid item>\n                    <Typography component=\"p\" variant=\"h6\">\n                      {contact.name}:\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography component=\"p\" variant=\"h6\">\n                      {contact.number}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"inherit\" \n                    sx={{\n                      '&:hover': {\n                        backgroundColor: '#f0f0f0', \n                      },\n                    }}\n                    onClick={() => handleDelete(contact.id)}\n                  >\n                    <CloseIcon fontSize=\"small\" sx={{ color: 'red' }} /> \n                  </Button>\n                </Grid>\n              </Grid>\n            </ListItem>\n          ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default ContactsList;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        marginTop: 4,\n        width: 580,\n      }}\n    >\n      <Typography component=\"p\" variant=\"h6\" sx={{ fontSize: '1.5rem', fontWeight: 'bold' }}>\n        Filter contacts by name\n      </Typography>\n      <TextField\n        margin=\"normal\"\n        fullWidth\n        id=\"filter\"\n        label=\"Name\"\n        name=\"filter\"\n        autoComplete=\"filter\"\n        onChange={handleInputChange}\n        sx={{\n            '& .Mui-focused': {\n            borderColor: '#4caf50', \n          },\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Filter;\n","import ContactsForm from 'components/ContactsForm/ContactsForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../../redux/root/selectors';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Loader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <Box\n      sx={{\n        marginTop: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Typography component=\"h2\" variant=\"h4\">\n        Phonebook\n      </Typography>\n      <ContactsForm />\n      <Typography component=\"h2\" variant=\"h4\">\n        Contacts\n      </Typography>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactsList />\n    </Box>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["selectContacts","state","contacts","items","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","greenTheme","createTheme","palette","primary","main","dispatch","useDispatch","useSelector","_jsx","ThemeProvider","theme","children","Box","sx","marginTop","marginBottom","_jsxs","component","onSubmit","e","preventDefault","target","elements","value","number","some","alert","concat","addContact","reset","noValidate","mt","display","flexDirection","alignItems","boxShadow","borderRadius","padding","TextField","margin","required","fullWidth","id","label","autoComplete","pattern","autoFocus","mb","type","Button","variant","List","map","ListItem","Grid","container","spacing","justifyContent","backgroundColor","item","gap","Typography","color","onClick","deleteContact","CloseIcon","fontSize","width","fontWeight","onChange","setFilter","borderColor","isLoading","selectIsLoading","error","selectError","ContactsForm","Filter","Loader","ContactsList","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}